[{"D:\\Projects\\my-app\\src\\App.tsx":"1","D:\\Projects\\my-app\\src\\components\\Calendar\\Calendar.tsx":"2","D:\\Projects\\my-app\\src\\index.tsx":"3","D:\\Projects\\my-app\\src\\reportWebVitals.ts":"4","D:\\Calendar\\src\\index.tsx":"5","D:\\Calendar\\src\\reportWebVitals.ts":"6","D:\\Calendar\\src\\App.tsx":"7","D:\\Calendar\\src\\components\\Calendar\\Calendar.tsx":"8","D:\\Calendar\\src\\components\\Calendar\\Day\\Day.tsx":"9","D:\\Calendar\\src\\components\\Calendar\\Notebook\\Notebook.tsx":"10","D:\\Calendar\\src\\components\\Calendar\\Popup.tsx":"11","D:\\Projects\\Calendar\\src\\index.tsx":"12","D:\\Projects\\Calendar\\src\\reportWebVitals.ts":"13","D:\\Projects\\Calendar\\src\\App.tsx":"14","D:\\Projects\\Calendar\\src\\components\\Calendar\\Calendar.tsx":"15","D:\\Projects\\Calendar\\src\\components\\Calendar\\Popup.tsx":"16","D:\\Projects\\Calendar\\src\\components\\Calendar\\Day\\Day.tsx":"17","D:\\Projects\\Calendar\\src\\components\\Calendar\\Notebook\\Notebook.tsx":"18","D:\\Projects\\Calendar\\src\\store\\reducer.ts":"19","D:\\Projects\\Calendar\\src\\store\\actionTypes.ts":"20","D:\\Projects\\Calendar\\src\\store\\actionCreators.ts":"21"},{"size":216,"mtime":1609525089116,"results":"22","hashOfConfig":"23"},{"size":4644,"mtime":1609667473144,"results":"24","hashOfConfig":"23"},{"size":500,"mtime":1609521723526,"results":"25","hashOfConfig":"23"},{"size":425,"mtime":1609521723526,"results":"26","hashOfConfig":"23"},{"size":517,"mtime":1609678730882,"results":"27","hashOfConfig":"28"},{"size":440,"mtime":1609678730883,"results":"29","hashOfConfig":"28"},{"size":229,"mtime":1609678730882,"results":"30","hashOfConfig":"28"},{"size":6427,"mtime":1609773219805,"results":"31","hashOfConfig":"28"},{"size":1016,"mtime":1609769756931,"results":"32","hashOfConfig":"28"},{"size":1178,"mtime":1609772875491,"results":"33","hashOfConfig":"28"},{"size":1958,"mtime":1609769104527,"results":"34","hashOfConfig":"28"},{"size":927,"mtime":1609927844009,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1609927171402,"results":"37","hashOfConfig":"36"},{"size":229,"mtime":1610199091111,"results":"38","hashOfConfig":"36"},{"size":4876,"mtime":1610222043315,"results":"39","hashOfConfig":"36"},{"size":2131,"mtime":1610210199502,"results":"40","hashOfConfig":"36"},{"size":1121,"mtime":1610214455032,"results":"41","hashOfConfig":"36"},{"size":1223,"mtime":1610214455022,"results":"42","hashOfConfig":"36"},{"size":1540,"mtime":1610214580218,"results":"43","hashOfConfig":"36"},{"size":182,"mtime":1610196817573,"results":"44","hashOfConfig":"36"},{"size":3272,"mtime":1610216842192,"results":"45","hashOfConfig":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1er06yr",{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1oob589",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"ihn6rh",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"D:\\Projects\\my-app\\src\\App.tsx",[],"D:\\Projects\\my-app\\src\\components\\Calendar\\Calendar.tsx",["92","93","94"],"D:\\Projects\\my-app\\src\\index.tsx",[],"D:\\Projects\\my-app\\src\\reportWebVitals.ts",[],"D:\\Calendar\\src\\index.tsx",[],["95","96"],"D:\\Calendar\\src\\reportWebVitals.ts",[],"D:\\Calendar\\src\\App.tsx",[],"D:\\Calendar\\src\\components\\Calendar\\Calendar.tsx",["97","98"],"D:\\Calendar\\src\\components\\Calendar\\Day\\Day.tsx",[],"D:\\Calendar\\src\\components\\Calendar\\Notebook\\Notebook.tsx",[],"D:\\Calendar\\src\\components\\Calendar\\Popup.tsx",[],"D:\\Projects\\Calendar\\src\\index.tsx",[],["99","100"],"D:\\Projects\\Calendar\\src\\reportWebVitals.ts",[],"D:\\Projects\\Calendar\\src\\App.tsx",[],"D:\\Projects\\Calendar\\src\\components\\Calendar\\Calendar.tsx",["101"],"import React, { useEffect, useState } from \"react\";\nimport Day from \"./Day/Day\";\nimport Notebook from \"./Notebook/Notebook\";\nimport Popup from \"./Popup\";\n\nimport { connect } from \"react-redux\";\n\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { DataProps, NotesProps } from \"../../store/type\";\nimport {\n  switchMonth,\n  addNewNote,\n  removeSelectNote,\n  setNewSelectedDay,\n} from \"../../store/actionCreators\";\n\ninterface CalendarProps {}\n\nconst Calendar: React.FC<CalendarProps> = () => {\n  const [isPopup, setIsPopup] = useState<Boolean>(false);\n  const [editTime, setEditTime] = useState<{\n    time: string;\n    message: string;\n  } | null>(null);\n\n  const monthName: String[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const closePopup = () => {\n    setIsPopup(false);\n    setEditTime(null);\n  };\n\n  const dispatch: Dispatch<any> = useDispatch();\n\n  const year: number | null = useSelector(\n    (state: DataProps) => state.year,\n    shallowEqual\n  );\n  const month: number | null = useSelector(\n    (state: DataProps) => state.month,\n    shallowEqual\n  );\n  const calendar: Date[] | null = useSelector(\n    (state: DataProps) => state.calendar,\n    shallowEqual\n  );\n  const notes: NotesProps | null = useSelector(\n    (state: DataProps) => state.notes,\n    shallowEqual\n  );\n\n  const selectedDay: { date: Date; selectedKey: string } = useSelector(\n    (state: DataProps) => state.selectedDay,\n    shallowEqual\n  );\n\n  const setDate = React.useCallback(\n    (date: Date) => dispatch(switchMonth(date)),\n    [dispatch]\n  );\n\n  const createNote = React.useCallback(\n    (key: string, time: string, message: string) => {\n      dispatch(addNewNote(key, time, message));\n      closePopup();\n    },\n    [dispatch]\n  );\n\n  const removeNote = React.useCallback(\n    (key: string, time: string) => {\n      dispatch(removeSelectNote(key, time));\n      closePopup();\n    },\n    [dispatch]\n  );\n\n  const setSelectedDay = React.useCallback(\n    (date: Date, selectedKey: string) => {\n      dispatch(setNewSelectedDay(date, selectedKey));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    setDate(new Date());\n  }, [setDate]);\n\n  const setEditMode = (time: string, message: string) => {\n    setEditTime({ time, message });\n    setIsPopup(true);\n  };\n\n  return (\n    <div className=\"calendarContainer\">\n      {isPopup ? (\n        <Popup\n          isOpen={isPopup}\n          closePopup={closePopup}\n          keyNote={selectedDay.selectedKey}\n          addNewNote={createNote}\n          removeNote={removeNote}\n          selectNote={editTime}\n        />\n      ) : (\n        calendar !== null &&\n        month !== null &&\n        year !== null && (\n          <div className=\"content\">\n            <div className=\"calendar\">\n              <div className=\"navbar\">\n                <div\n                  onClick={() => setDate(new Date(year, month, 0))}\n                  className=\"arrow prev\"\n                >\n                  &#10094;\n                </div>\n                <div className=\"date\">\n                  <div>{monthName[month]}</div>\n                  <div>{year}</div>\n                </div>\n                <div\n                  onClick={() => setDate(new Date(year, month + 1, 1))}\n                  className=\"arrow next\"\n                >\n                  &#10095;\n                </div>\n              </div>\n              <div className=\"daysName\">\n                <div>Mo</div>\n                <div>Tu</div>\n                <div>We</div>\n                <div>Th</div>\n                <div>Fr</div>\n                <div>Sa</div>\n                <div>Su</div>\n              </div>\n              <div className=\"days\">\n                {calendar.map((date: Date, index) => (\n                  <Day\n                    key={date.toString()}\n                    date={date}\n                    month={month}\n                    year={year}\n                    selectedDay={selectedDay.date}\n                    selectNewDay={setSelectedDay}\n                    notes={notes}\n                  />\n                ))}\n              </div>\n              <div onClick={() => setIsPopup(true)} className=\"selectedDate\">\n                <div>\n                  {selectedDay.date.getDate()}{\" \"}\n                  {monthName[selectedDay.date.getMonth()]}{\" \"}\n                  {selectedDay.date.getFullYear()}\n                </div>\n                <div>Add +</div>\n              </div>\n            </div>\n            <Notebook\n              selectedDay={selectedDay.date}\n              notes={notes}\n              removeNote={removeNote}\n              setEditMode={setEditMode}\n            />\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Calendar;\n","D:\\Projects\\Calendar\\src\\components\\Calendar\\Popup.tsx",[],"D:\\Projects\\Calendar\\src\\components\\Calendar\\Day\\Day.tsx",[],"D:\\Projects\\Calendar\\src\\components\\Calendar\\Notebook\\Notebook.tsx",[],["102","103"],"D:\\Projects\\Calendar\\src\\store\\reducer.ts",[],"D:\\Projects\\Calendar\\src\\store\\actionTypes.ts",[],"D:\\Projects\\Calendar\\src\\store\\actionCreators.ts",[],{"ruleId":"104","severity":1,"message":"105","line":1,"column":41,"nodeType":"106","messageId":"107","endLine":1,"endColumn":48},{"ruleId":"104","severity":1,"message":"108","line":4,"column":23,"nodeType":"106","messageId":"107","endLine":4,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":134,"column":6,"nodeType":"111","endLine":134,"endColumn":8,"suggestions":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"104","severity":1,"message":"117","line":1,"column":30,"nodeType":"106","messageId":"107","endLine":1,"endColumn":39},{"ruleId":"109","severity":1,"message":"118","line":133,"column":6,"nodeType":"111","endLine":133,"endColumn":8,"suggestions":"119"},{"ruleId":"113","replacedBy":"120"},{"ruleId":"115","replacedBy":"121"},{"ruleId":"104","severity":1,"message":"122","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":17},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'setSelectedDay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'getAllDay'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'useEffect' is defined but never used.","React Hook useCallback has a missing dependency: 'setCalendar'. Either include it or remove the dependency array.",["128"],["126"],["127"],"'connect' is defined but never used.",["126"],["127"],{"desc":"129","fix":"130"},"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [getAllDay]",{"range":"133","text":"134"},"Update the dependencies array to be: [setCalendar]",{"range":"135","text":"136"},[3666,3668],"[getAllDay]",[3433,3435],"[setCalendar]"]